from clubAnalyser import Analysis
prl_clubs = [
                # [2105682791, 2103829928,2108885708,2114004335,1879637872,335414518,1982327768,2167617533,],
                # [2168860362, 214878226, 2420887148, 2143675271],
                # [346703939, 1725132105, 1244974601, 2048719660, 2054844082],
                # [2064393185, 2120199875, 2078454212, 2150454853, 2309141562, 76530380, 1969841055, 2195679122, 2146387448, 1954235802, 2258767774, 2165532159], # no citation
                # # [2603090433, 2841074785, 2136197381, 2127723851, 2790179500, 2126101459, 2558682966], #32 len(7) no citation
                # [2608506984, 2163830057, 2106866729, 2639260782, 2299437103, 2079150322, 2110542169, 2593217274, 2907377662], # prl main 7 len(9)
                # [2940974881, 2047018924, 2136098704, 2542471538, 2941502995, 2110029363, 2148076503, 1994637948], #1 len(8)
                # [22876707, 1782449480, 2779438289, 1881478427, 1923040252], #60 len(5)
                # [2105682791, 2103829928, 2108885708, 2114004335, 1879637872, 335414518, 1982327768, 2167617533], #58 len(8)
                # [2092411937, 1723882514, 1971876915, 2145653005], #72 len(4)
                # [301702145, 2107507490, 2648413701, 2151466935, 285706879], #36 len(5)
                # [1740375789, 2117512622, 2709506286, 1948338481, 2191762995, 2644468377, 2158987803], # 17 len(7)
                # [1877061731, 182685220, 2012548583, 2514938511, 2313287600, 237246515], #45 len(6)
                # [2439384097, 2145174184, 2470375243, 2324006443, 2163249015, 2251219035], #33 len(6)
                # [2136340264, 2153049160, 2178056580, 2108514551], #9 len(4)
                [2530972163, 2163470342, 2953368070, 2916255243, 2786860172, 2493535503, 1999536656, 2806021778, 2719544221, 2191573790, 2118003487, 2785462173, 2435795745, 2762446754, 2131084071, 2106866729, 2163830057, 2299437103, 2153170226, 2617328699, 2307711420, 2639933372, 2181331778, 2111317318, 2486321479, 2275853904, 2525533649, 2618462548, 2054682710, 2131585752, 2110542169, 2128616155, 2308378844, 2648045154, 2419996774, 2639260782, 2776399727, 2079150322, 2141729011, 2717155834, 2593217274, 2980864762, 2306900094, 2107803903]
            ]
prl_labels = [
    # ["PRL_63","PRL_64","PRL_65","PRL_66","PRL_67","PRL_68","PRL_69","PRL_70","PRL_71","PRL_72","PRL_73","PRL_74"],
    # ["PRL-1","PRL-2","PRL-3","PRL-4","PRL-5","PRL-6","PRL-7","PRL-8","PRL-9"],
    # ["PRL-10","PRL-11","PRL-12","PRL-13","PRL-14","PRL-15","PRL-16","PRL-17",],
    # ["PRL-18",   "PRL-19",   "PRL-20",   "PRL-21",   "PRL-22",],
    # ["PRL-23","PRL-24","PRL-25","PRL-26","PRL-27","PRL-28","PRL-29","PRL-30",],["PRL-31","PRL-32","PRL-33","PRL-34",],
    # ["PRL-35","PRL-36","PRL-37","PRL-38","PRL-39",],
    # ["PRL-40","PRL-41","PRL-42","PRL-43","PRL-44","PRL-45","PRL-46",],
    # ["PRL-47","PRL-48","PRL-49","PRL-50","PRL-51","PRL-52",],
    # ["PRL-53","PRL-54","PRL-55","PRL-56","PRL-57","PRL-58",],
    # ["PRL-59","PRL-60","PRL-61","PRL-62",]
    ['cj.pcc[1].auth[1]', 'cj.pcc[1].auth[2]', 'cj.pcc[1].auth[3]', 'cj.pcc[1].auth[4]', 'cj.pcc[1].auth[5]', 'cj.pcc[1].auth[6]', 'cj.pcc[1].auth[7]', 'cj.pcc[1].auth[8]', 'cj.pcc[1].auth[9]', 'cj.pcc[1].auth[10]', 'cj.pcc[1].auth[11]', 'cj.pcc[1].auth[12]', 'cj.pcc[1].auth[13]', 'cj.pcc[1].auth[14]', 'cj.pcc[1].auth[15]', 'cj.pcc[1].auth[16]', 'cj.pcc[1].auth[17]', 'cj.pcc[1].auth[18]', 'cj.pcc[1].auth[19]', 'cj.pcc[1].auth[20]', 'cj.pcc[1].auth[21]', 'cj.pcc[1].auth[22]', 'cj.pcc[1].auth[23]', 'cj.pcc[1].auth[24]', 'cj.pcc[1].auth[25]', 'cj.pcc[1].auth[26]', 'cj.pcc[1].auth[27]', 'cj.pcc[1].auth[28]', 'cj.pcc[1].auth[29]', 'cj.pcc[1].auth[30]', 'cj.pcc[1].auth[31]', 'cj.pcc[1].auth[32]', 'cj.pcc[1].auth[33]', 'cj.pcc[1].auth[34]', 'cj.pcc[1].auth[35]', 'cj.pcc[1].auth[36]', 'cj.pcc[1].auth[37]', 'cj.pcc[1].auth[38]', 'cj.pcc[1].auth[39]', 'cj.pcc[1].auth[40]', 'cj.pcc[1].auth[41]', 'cj.pcc[1].auth[42]', 'cj.pcc[1].auth[43]', 'cj.pcc[1].auth[44]']
]

jmlr_clubs = [  
                # [2012736320, 2072849696, 284430083, 1281575332, 2077020583, 2130456104, 2522648935, 2443967568, 1974025617, 2032345308, 2187581557, 2209303800, 1889475642, 2037010747, 2233962492, 2162369918],
                # [1977649925, 2468960519, 1972291593, 1572478601, 2048266507, 2171367185, 2038901907, 2042048789, 2285762679, 2158987803, 168172700, 1980701853, 2086114595, 2062380982, 2099091510, 2279633593, 2150887997, 2609987651, 2165695307, 2093953614, 60139091, 2330451, 2113868374, 2122791383, 297432538, 2148448995, 2122328552, 289005672, 167589996, 670306551, 2584127737, 251023228, 2107302653, 2296948990], #main jmlr (17)
                # [2167366370, 2239053892, 2086475204, 2096029477, 2806907591, 2080344424, 1531155176, 2141705163, 2232397101, 2292250447, 2171234738, 2165137138, 92438100, 1484279603, 1518321175, 2073631992, 278177626, 2169901821], # worakable jmlr (2)
                # [2298166661, 2163216773, 2498491921, 2717986583, 2944302109, 2121310506, 2221257390, 2289542319, 90224947, 2145260995, 2018227268, 1982785356, 2152194765, 2015383761, 1908865110, 2510858842, 2123304929, 72441953, 2221004268, 1526086892, 1995962232, 2435751034], #(16)
                # [2132891653, 2328658054, 2155579207, 2141663339, 1264356972, 2312000221], #21
                # [229038272, 2165788238, 2589844882, 2151859571, 2462785460, 2524462901, 2100565365, 2704209241, 2116323195, 243317564, 2193999452], # 10
                # [1624046946, 2003540582, 2065379623, 2511882603, 1900016303, 2951126644, 179778838, 2344754685], # 26
                # [2252852592, 2158620633, 2118479066, 2192679303], # 15
                # [4651849, 271970670, 2072240339, 1823252276, 2600952536, 2619192764], #23
                # [158112612, 131065259, 254054780, 18953175], #32
                # [715021696, 2012385898, 2409260842, 2148168557, 2137603918, 2234508751, 2099647344, 2148022289, 2037585042, 2129170864, 2417153716, 2074453466, 2033403132], #9
                #[2035876866, 2116836739, 2130181892, 2700953612, 2300711308, 2110501006, 2583656720, 2162752662, 2120348443, 2140714400, 2138722980, 2113276713, 2135302315, 2130712876, 2598605361, 2119739827, 2141326772, 2127632057, 2165888709, 2168176072, 2114357324, 2591117145, 2157689689, 2155265242, 2396073053, 2118530536, 2108673390, 2110230645, 2126599162], #13 len (29)
                [2116836739, 2130181892, 2300711308, 2583656720, 2162752662, 2120348443, 2140714400, 2138722980, 2113276713, 2135302315, 2130712876, 2598605361, 2119739827, 2141326772, 2127632057, 2165888709, 2168176072, 2114357324, 2157689689, 2591117145, 2155265242, 2118530536, 2108673390, 2110230645]
            ]

jmlr_labels = [
                # ["JMLR-1","JMLR-2","JMLR-3","JMLR-4","JMLR-5","JMLR-6","JMLR-7","JMLR-8","JMLR-9","JMLR-10","JMLR-11","JMLR-12","JMLR-13","JMLR-14","JMLR-15","JMLR-16","JMLR-17","JMLR-18","JMLR-19","JMLR-20","JMLR-21","JMLR-22","JMLR-23","JMLR-24","JMLR-25","JMLR-26","JMLR-27","JMLR-28","JMLR-29","JMLR-30","JMLR-31","JMLR-32","JMLR-33","JMLR-34"],
                # ["JMLR-35","JMLR-36","JMLR-37","JMLR-38","JMLR-39","JMLR-40","JMLR-41","JMLR-42","JMLR-43","JMLR-44","JMLR-45","JMLR-46","JMLR-47","JMLR-48","JMLR-49","JMLR-50","JMLR-51","JMLR-52"],
                # ["JMLR-53","JMLR-54","JMLR-55","JMLR-56","JMLR-57","JMLR-58","JMLR-59","JMLR-60","JMLR-61","JMLR-62","JMLR-63","JMLR-64","JMLR-65","JMLR-66","JMLR-67","JMLR-68","JMLR-69","JMLR-70","JMLR-71","JMLR-72","JMLR-73","JMLR-74"],
                # ["JMLR-75","JMLR-76","JMLR-77","JMLR-78","JMLR-79","JMLR-80",],
                # ["JMLR-81","JMLR-82","JMLR-83","JMLR-84","JMLR-85","JMLR-86","JMLR-87","JMLR-88","JMLR-89","JMLR-90","JMLR-91",],
                # ["JMLR-93","JMLR-94","JMLR-95","JMLR-96","JMLR-97","JMLR-98","JMLR-99","JMLR-100",],
                # ["JMLR-101","JMLR-102","JMLR-103","JMLR-104",],
                # ["JMLR-105","JMLR-106","JMLR-107","JMLR-108","JMLR-109","JMLR-110",],
                # ["JMLR-111","JMLR-112","JMLR-113","JMLR-114",],
                # ["JMLR-115","JMLR-116","JMLR-117","JMLR-118","JMLR-119","JMLR-120","JMLR-121","JMLR-122","JMLR-123","JMLR-124","JMLR-125","JMLR-126","JMLR-127",],
                #["JMLR-128","JMLR-129","JMLR-130","JMLR-131","JMLR-132","JMLR-133","JMLR-134","JMLR-135","JMLR-136","JMLR-137","JMLR-138","JMLR-139","JMLR-140","JMLR-141","JMLR-142","JMLR-143","JMLR-144","JMLR-145","JMLR-146","JMLR-147","JMLR-148","JMLR-149","JMLR-150","JMLR-151","JMLR-152","JMLR-153","JMLR-154","JMLR-155","JMLR-156",],
                ['oj.pcc[1].auth[1]', 'oj.pcc[1].auth[2]', 'oj.pcc[1].auth[3]', 'oj.pcc[1].auth[4]', 'oj.pcc[1].auth[5]', 'oj.pcc[1].auth[6]', 'oj.pcc[1].auth[7]', 'oj.pcc[1].auth[8]', 'oj.pcc[1].auth[9]', 'oj.pcc[1].auth[10]', 'oj.pcc[1].auth[11]', 'oj.pcc[1].auth[12]', 'oj.pcc[1].auth[13]', 'oj.pcc[1].auth[14]', 'oj.pcc[1].auth[15]', 'oj.pcc[1].auth[16]', 'oj.pcc[1].auth[17]', 'oj.pcc[1].auth[18]', 'oj.pcc[1].auth[19]', 'oj.pcc[1].auth[20]', 'oj.pcc[1].auth[21]', 'oj.pcc[1].auth[22]', 'oj.pcc[1].auth[23]', 'oj.pcc[1].auth[24]']
            ]


count = 70
mask_pref = "cj.pcc[1]"
#fin = './data/prl/prl_dblp.json'
fin = './data/jmlr/jmlr_dblp.json'
#for club, labels in zip(prl_clubs, prl_labels):
for club, labels in zip(jmlr_clubs, jmlr_labels):
    dict_ = dict(zip(club,labels))
    #print(club, labels, dict_)
    ca = Analysis(club, fin)
    coauth = ca.collab
    ref = ca.projection
    self_cit = []
    for i in range(len(club)):
        for j in range(len(club)):
            if i == j:
                self_cit.append(len(ref[i][j]))
    print("\nCoauthorship")
    for co in coauth:
        for c in co:
            print(c, end = "&")
        print(r"\\")

    print("\nself citation, club citation and journal citation counts")
    jc = ca.count_journal_cit()
    cc = ca.get_club_cit()
    # print(jc)
    for i, x, y, z in zip(labels, self_cit, cc, jc):
        print(str(i), "&", str(x), "&", str(len(y)), "&",  str(z), r"\\")
    
    
    print("\nSCC, size and score with total score")
    sccs = ca.get_scc()
    total_strength = 0
    for i in sccs:
        print(i.members, len(i.members), i.weight)
        total_strength += i.weight
    print("total ", total_strength)
    '''
    comp, weight, score = 
    for i in range(len(comp)):
        temp = []
        for j in comp[i]:
            temp.append(dict_[j])
        # print("S"+(str(count)), "&", str(weight[i]), "&", score[i], r"\\")
        # # print("S"+(str(count)), "&",  str(temp).replace("'","").replace("[","").replace("]",""), r"\\")
        print(str(temp).replace("'","").replace("[","").replace("]",""), "&", str(weight[i]), "&", score[i], r"\\")
        count += 1
    print("Club score: ", sum(score))

    print("\n\n\n")
    '''

    # ca.masked_visualise("results/prl_graphs/induced_coauth_subg_"+labels[0]+".gv", engine='circo', labels=labels)
    #ca.masked_visualise("results/jmlr_graphs/induced_coauth_subg_"+labels[0]+".gv", engine='circo', labels=labels)
    break

# import pickle
# # with open('results/experiment3/jmlr.gcc.bin', 'rb') as fil:
# objects = []
# with (open('results/experiment3/jmlr.gcc.bin', "rb")) as openfile:
#     while True:
#         try:
#             objects.append(pickle.load(openfile))
#         except EOFError:
#             break
# # print(objects)
# for e in objects:
#     print(e)
#     break